/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import controller.SaveOfflineController;
import java.awt.Cursor;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import server.serverGmail;

/**
 *
 * @author rockiericker
 */
public class lihatEmail extends javax.swing.JFrame {
private final serverGmail servergmail = new serverGmail();
enkripFile viewenkripsiFile; 
dekripFile viewdeskripsiFile;
enkripText viewenkripsiPesan;
dekripText viewdeskripsiPesan;
tulisEmail viewcompose;
DefaultTableModel inboxTableModel;
DefaultTableModel sentTableModel;
SaveOfflineController soc = new SaveOfflineController();
SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss");
SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date date = null;

    /**
     * Creates new form viewEmail
     */
    public lihatEmail() {
        initComponents();
        inboxTableModel = (DefaultTableModel) inboxTable.getModel();
        sentTableModel = (DefaultTableModel) sentTable.getModel();
        if(servergmail.cekKoneksi()){
            jButton3.setVisible(true);
            System.out.println("Online mode");
            try{
                servergmail.loadAkun();
                jMenu1.setText(servergmail.getUser());
            }catch(IOException e){

            }
            Thread treet = new Thread(){
            public void run(){
                servergmail.readEmail(inboxTable, sentTable);
            }};treet.start();
        } else{
            System.out.println("Offline mode");
            jButton3.setVisible(false);
            try{
                servergmail.loadAkun();
                jMenu1.setText(servergmail.getUser());
            }catch(IOException e){

            }
            servergmail.tampilkanDataTable(inboxTable, inboxTableModel,"inbox");
            servergmail.tampilkanDataTable(sentTable, sentTableModel,"sent");

            
        }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new editSwing.Panel();
        jScrollPane7 = new javax.swing.JScrollPane();
        inboxTable = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        hapusButton = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        sentTable = new javax.swing.JTable();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dinas Pendidikan dan Kebudayaan Kota Tangerang");

        panel1.setBackground(new java.awt.Color(204, 204, 204));

        inboxTable.setBackground(new java.awt.Color(204, 255, 191));
        inboxTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inboxTable.setForeground(new java.awt.Color(226, 29, 29));
        inboxTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "From", "Subject", "Messages", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inboxTable.setGridColor(new java.awt.Color(204, 204, 204));
        inboxTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        inboxTable.getTableHeader().setReorderingAllowed(false);
        inboxTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inboxTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(inboxTable);

        jCheckBox1.setText("Pilih Semua");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        hapusButton.setBackground(new java.awt.Color(0, 0, 0));
        hapusButton.setForeground(new java.awt.Color(255, 255, 255));
        hapusButton.setText("Hapus");
        hapusButton.setOpaque(false);
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        sentTable.setBackground(new java.awt.Color(204, 255, 191));
        sentTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sentTable.setForeground(new java.awt.Color(226, 29, 29));
        sentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "From", "Subject", "Messages", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sentTable.setGridColor(new java.awt.Color(204, 204, 204));
        sentTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        sentTable.getTableHeader().setReorderingAllowed(false);
        sentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sentTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(sentTable);

        jCheckBox2.setText("Pilih Semua");
        jCheckBox2.setOpaque(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Hapus");
        jButton4.setOpaque(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Reload");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Save to offline mode");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Compose");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hapusButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(hapusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("example@gmail.com");

        jMenuItem1.setText("Logout");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Enkripsi");

        jMenuItem2.setText("Enkripsi File");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem4.setText("Enkripsi Text");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Dekripsi");

        jMenuItem3.setText("Dekripsi File");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem5.setText("Dekripsi Text");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
boolean loading;
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        viewenkripsiFile = new enkripFile(null,true);
        viewenkripsiFile.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        viewdeskripsiFile= new dekripFile(null,true);
        viewdeskripsiFile.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        viewenkripsiPesan = new enkripText(null,true);
        viewenkripsiPesan.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        viewdeskripsiPesan = new dekripText (null,true);
        viewdeskripsiPesan.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String direktori=System.getProperty("user.dir");
        File file = new File(direktori+"/src/seting/imapProperties.properties");  
        file.delete();
        file = new File(direktori+"/src/seting/SMTPProperties.properties");  
        file.delete();
        file = new File(direktori+"/src/seting/akunProperties.properties");  
        file.delete();
        this.dispose();
        akun viewakun = new akun();
        viewakun.setVisible(true);
        servergmail.closed();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void inboxTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inboxTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            int i=inboxTable.getSelectedRow();
            if(servergmail.cekKoneksi()){
                try{
                    if(servergmail.readEmail(i,"inbox")){
                        inboxTable.setValueAt("R", i, 0);
                    }
                }catch(IOException e){
                    System.out.print(e);
                }
            }else{
                if(servergmail.readEmailOffline(i,"inbox",inboxTable)){
                    inboxTable.setValueAt("R", i, 0);
                }
            }
        }
    }//GEN-LAST:event_inboxTableMouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(!loading){
            if(!jCheckBox1.isSelected()){
                for(int i=0;i<inboxTable.getRowCount();i++){
                    inboxTable.setValueAt(Boolean.FALSE, i, 1);
                    jCheckBox1.setSelected(false);
                }
            }else{
                for(int i=0;i<inboxTable.getRowCount();i++){
                    inboxTable.setValueAt(Boolean.TRUE, i, 1);
                    jCheckBox1.setSelected(true);
                }
            }}
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        if(servergmail.cekKoneksi()){
            loading=true;
            /*Thread treet3 = new Thread() {
                public void run() {
                    String titik=".";
                    do{
                        for(int i=0;i<5;i++){
                            hapusLabel.setText("Hapus Email."+titik);
                            try{
                                Thread.sleep(500);
                            }catch(InterruptedException  e){
                            }
                            titik+=titik;
                        }
                        titik=".";
                    }
                    while(loading);{
                        hapusLabel.setText("");
                    }

                }
            };treet3.start();*/
            Thread  treetHapus = new Thread(){
                public void run(){
                    try {
                        hapusButton.setEnabled(false);
                        if(servergmail.hapus(inboxTable, "inbox")){
                            JOptionPane.showMessageDialog(null,"Penghapusan Pesan Berhasil","Informasi",JOptionPane.INFORMATION_MESSAGE);
                            jCheckBox1.setSelected(false);
                            hapusButton.setEnabled(true);
                        }   } catch (InterruptedException ex) {
                            Logger.getLogger(lihatEmail.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        jCheckBox1.setEnabled(true);
                        loading=false;
                    }};treetHapus.start();
                }else{
                    servergmail.hapusDataFolderOffline(inboxTable, "inbox");
                }
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void sentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sentTableMouseClicked
        // TODO add your handling code here
        if(!loading){
            if(evt.getClickCount()==2){
                int i=sentTable.getSelectedRow();
                if(servergmail.cekKoneksi()){
                    try {
                        if(servergmail.readEmail(i,"sent")){
                            sentTable.setValueAt("R", i, 0);
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(lihatEmail.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    if(servergmail.readEmailOffline(i,"sent",sentTable)){
                        sentTable.setValueAt("R", i, 0);
                    }
                }
            }
        }
    }//GEN-LAST:event_sentTableMouseClicked

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if(!jCheckBox2.isSelected()){
            for(int i=0;i<sentTable.getRowCount();i++){
                sentTable.setValueAt(Boolean.FALSE, i, 1);
                jCheckBox2.setSelected(false);
            }
        }else{
            for(int i=0;i<sentTable.getRowCount();i++){
                sentTable.setValueAt(Boolean.TRUE, i, 1);
                jCheckBox2.setSelected(true);
            }
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        if(servergmail.cekKoneksi()){
            loading=true;
            /*Thread treet3 = new Thread() {
                public void run() {
                    String titik=".";
                    do{
                        for(int i=0;i<5;i++){
                            hapusLabel1.setText("Hapus Email."+titik);
                            try{
                                Thread.sleep(500);
                            }catch(InterruptedException  e){
                            }
                            titik+=titik;
                        }
                        titik=".";
                    }
                    while(loading);{
                        hapusLabel1.setText("");
                    }

                }
            };treet3.start();*/
            Thread treetHapus = new Thread(){
                public void run(){
                    jButton4.setEnabled(false);
                    try {
                        if(servergmail.hapus(sentTable, "sent")){
                            JOptionPane.showMessageDialog(null,"Penghapusan Pesan Berhasil","Informasi",JOptionPane.INFORMATION_MESSAGE);
                            jCheckBox2.setSelected(false);
                            jButton4.setEnabled(true);
                        }   } catch (InterruptedException ex) {
                            Logger.getLogger(lihatEmail.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        jCheckBox2.setEnabled(true);
                        loading=false;
                    }};treetHapus.start();
                }else{
                    servergmail.hapusDataFolderOffline(sentTable, "sent");
                }
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        if(servergmail.cekKoneksi()){
            servergmail.closed();
            Thread treet = new Thread(){
                public void run(){
                    servergmail.readEmail(inboxTable, sentTable);
                    jButton3.setVisible(true);
                }
            };treet.start();
        }else{
            inboxTableModel.setRowCount(0);
            //            sentTableModel.setRowCount(0);
            servergmail.tampilkanDataTable(inboxTable, inboxTableModel,"inbox");
            //            servergmail.tampilkanDataTable(sentTable, sentTableModel,"sent");
        }
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        if(inboxTable.getRowCount()>0){
            Object[][] listInbox = new Object[inboxTable.getRowCount()][5];
            for(int x=0;x<inboxTable.getRowCount();x++){
                soc.userID = jMenu1.getText();
                soc.tanggal = inboxTable.getValueAt(x, 5).toString();
                listInbox[0][0] = inboxTable.getValueAt(x, 0);
                listInbox[0][1] = inboxTable.getValueAt(x, 2);
                listInbox[0][2] = inboxTable.getValueAt(x, 3);
                listInbox[0][3] = inboxTable.getValueAt(x, 4);
                listInbox[0][4] = inboxTable.getValueAt(x, 5);
                soc.listInbox = listInbox;
                if(soc.simpanInbox()){
                    System.out.println("Pesan masuk tersimpan...");
                }else{
                    //JOptionPane.showMessageDialog(null, soc.pesan);
                    System.out.println("Gagal menyimpan pesan masuk...");
                }
            }

            Object[][] listSent = new Object[sentTable.getRowCount()][5];
            for(int x=0;x<sentTable.getRowCount();x++){
                soc.userID = jMenu1.getText();
                soc.tanggal = sentTable.getValueAt(x, 5).toString();
                listSent[0][0] = sentTable.getValueAt(x, 0);
                listSent[0][1] = sentTable.getValueAt(x, 2);
                listSent[0][2] = sentTable.getValueAt(x, 3);
                listSent[0][3] = sentTable.getValueAt(x, 4);
                listSent[0][4] = sentTable.getValueAt(x, 5);
                soc.listSent = listSent;
                if(soc.simpanSent()){
                    System.out.println("Pesan terkirim tersimpan...");
                }else{
                    //JOptionPane.showMessageDialog(null, soc.pesan);
                    System.out.println("Gagal menyimpan pesan terkirim...");
                }
            }

        }
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        viewcompose = new  tulisEmail(null,true);
        viewcompose.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lihatEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lihatEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lihatEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lihatEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lihatEmail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapusButton;
    private javax.swing.JTable inboxTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane7;
    private editSwing.Panel panel1;
    private javax.swing.JTable sentTable;
    // End of variables declaration//GEN-END:variables
}
